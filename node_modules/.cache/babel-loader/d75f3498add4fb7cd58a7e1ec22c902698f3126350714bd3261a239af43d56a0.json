{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Mate\\\\typeScriptProjects\\\\loading_data_from_server\\\\src\\\\components\\\\UserPosts.tsx\",\n  _s = $RefreshSig$();\n// #region imports \nimport React, { useCallback, useEffect, useState } from 'react';\nimport { PostForm } from './PostForm';\n\n// #endregion\n\n//import postsFromServer from '../api/posts.json';\nimport { PostList } from './PostList';\nimport { getUserPosts } from '../servises/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserPosts = ({\n  userId\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    getUserPosts(userId).then(setPosts);\n  }, [userId]);\n\n  // #region add, delete, update\n  const [selectedPost, setSelectedPost] = useState(null);\n  const addPost = useCallback(post => {\n    setPosts(currentPosts => {\n      const maxId = Math.max(...currentPosts.map(post => post.id));\n      const id = maxId + 1;\n      return [...currentPosts, {\n        ...post,\n        id\n      }];\n    });\n  }, []);\n  const deletePost = useCallback(postId => {\n    setPosts(currentPosts => currentPosts.filter(post => post.id !== postId));\n  }, []);\n  const updatePost = useCallback(updatedPost => {\n    setPosts(currentPosts => {\n      const newPosts = [...currentPosts];\n      const index = newPosts.findIndex(post => post.id === updatedPost.id);\n      newPosts.splice(index, 1, updatedPost);\n      return newPosts;\n    });\n  }, []);\n  // #endregion\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title is-4\",\n      children: [\"User \", userId, \" Posts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(PostForm, {\n      post: selectedPost,\n      onSubmit: updatePost,\n      onReset: deletePost => setSelectedPost(null)\n    }, selectedPost === null || selectedPost === void 0 ? void 0 : selectedPost.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPosts, \"HF4mS06MNfARySMLpEFgDw37ksY=\");\n_c = UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","PostForm","PostList","getUserPosts","jsxDEV","_jsxDEV","UserPosts","userId","_s","posts","setPosts","then","selectedPost","setSelectedPost","addPost","post","currentPosts","maxId","Math","max","map","id","deletePost","postId","filter","updatePost","updatedPost","newPosts","index","findIndex","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onReset","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Mate/typeScriptProjects/loading_data_from_server/src/components/UserPosts.tsx"],"sourcesContent":["// #region imports \nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Post } from '../types/Post';\nimport { PostForm } from './PostForm';\n\n// #endregion\n\n//import postsFromServer from '../api/posts.json';\nimport { PostList } from './PostList';\nimport { getUserPosts } from '../servises/posts';\n\ntype Props = {\n  userId: number;\n};\n\nexport const UserPosts: React.FC<Props> = ({ userId }) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(setPosts);\n  }, [userId]);\n\n  // #region add, delete, update\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  const addPost = useCallback((post: Post) => {\n    setPosts(currentPosts => {\n      const maxId = Math.max(...currentPosts.map(post => post.id));\n      const id = maxId + 1;\n\n      return [...currentPosts, { ...post, id }];\n    });\n  }, []);\n\n  const deletePost = useCallback((postId: number) => {\n    setPosts(currentPosts => currentPosts.filter(post => post.id !== postId));\n  }, []);\n\n  const updatePost = useCallback((updatedPost: Post) => {\n    setPosts(currentPosts => {\n      const newPosts = [...currentPosts];\n      const index = newPosts.findIndex(post => post.id === updatedPost.id);\n\n      newPosts.splice(index, 1, updatedPost);\n\n      return newPosts;\n    });\n  }, []);\n  // #endregion\n\n  return (\n    <div className=\"box\">\n      <h2 className=\"title is-4\">User {userId} Posts</h2>\n\n      <PostList posts={posts} />\n\n      {selectedPost && (\n        <PostForm\n          key={selectedPost?.id}\n          post={selectedPost}\n          onSubmit={updatePost}\n          onReset={(deletePost) => setSelectedPost(null)}\n        />\n      )}\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}