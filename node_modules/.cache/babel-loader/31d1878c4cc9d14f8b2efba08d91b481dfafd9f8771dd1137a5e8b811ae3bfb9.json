{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Mate\\\\typeScriptProjects\\\\loading_data_from_server\\\\src\\\\components\\\\UserPosts.tsx\",\n  _s = $RefreshSig$();\n// #region imports \n// import React, { useCallback, useEffect, useState } from 'react';\nimport React, { useEffect, useState } from 'react';\nimport { PostForm } from './PostForm';\n\n// #endregion\n\n//import postsFromServer from '../api/posts.json';\nimport { PostList } from './PostList';\nimport { getUserPosts } from '../servises/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserPosts = ({\n  userId\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    getUserPosts(userId).then(setPosts);\n  }, [userId]);\n\n  // #region add, delete, update\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  // const addPost = useCallback((post: Post) => {\n  //   setPosts(currentPosts => {\n  //     const maxId = Math.max(...currentPosts.map(post => post.id));\n  //     const id = maxId + 1;\n\n  //     return [...currentPosts, { ...post, id }];\n  //   });\n  // }, []);\n\n  // const deletePost = useCallback((postId: number) => {\n  //   setPosts(currentPosts => currentPosts.filter(post => post.id !== postId));\n  // }, []);\n\n  // const updatePost = useCallback((updatedPost: Post) => {\n  //   setPosts(currentPosts => {\n  //     const newPosts = [...currentPosts];\n  //     const index = newPosts.findIndex(post => post.id === updatedPost.id);\n\n  //     newPosts.splice(index, 1, updatedPost);\n\n  //     return newPosts;\n  //   });\n  // }, []);\n  // #endregion\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title is-4\",\n      children: [\"User \", userId, \" Posts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(PostForm, {\n      post: selectedPost,\n      onSubmit: updatePost,\n      onReset: () => setSelectedPost(null)\n    }, selectedPost === null || selectedPost === void 0 ? void 0 : selectedPost.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPosts, \"fmUUjCZ6PRCvxk0vUpzuvq71o7o=\");\n_c = UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","useEffect","useState","PostForm","PostList","getUserPosts","jsxDEV","_jsxDEV","UserPosts","userId","_s","posts","setPosts","then","selectedPost","setSelectedPost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","post","onSubmit","updatePost","onReset","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Mate/typeScriptProjects/loading_data_from_server/src/components/UserPosts.tsx"],"sourcesContent":["// #region imports \n// import React, { useCallback, useEffect, useState } from 'react';\nimport React, {  useEffect, useState } from 'react';\nimport { Post } from '../types/Post';\nimport { PostForm } from './PostForm';\n\n// #endregion\n\n//import postsFromServer from '../api/posts.json';\nimport { PostList } from './PostList';\nimport { getUserPosts } from '../servises/posts';\n\ntype Props = {\n  userId: number;\n};\n\nexport const UserPosts: React.FC<Props> = ({ userId }) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(setPosts);\n  }, [userId]);\n\n  // #region add, delete, update\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  // const addPost = useCallback((post: Post) => {\n  //   setPosts(currentPosts => {\n  //     const maxId = Math.max(...currentPosts.map(post => post.id));\n  //     const id = maxId + 1;\n\n  //     return [...currentPosts, { ...post, id }];\n  //   });\n  // }, []);\n\n  // const deletePost = useCallback((postId: number) => {\n  //   setPosts(currentPosts => currentPosts.filter(post => post.id !== postId));\n  // }, []);\n\n  // const updatePost = useCallback((updatedPost: Post) => {\n  //   setPosts(currentPosts => {\n  //     const newPosts = [...currentPosts];\n  //     const index = newPosts.findIndex(post => post.id === updatedPost.id);\n\n  //     newPosts.splice(index, 1, updatedPost);\n\n  //     return newPosts;\n  //   });\n  // }, []);\n  // #endregion\n\n  return (\n    <div className=\"box\">\n      <h2 className=\"title is-4\">User {userId} Posts</h2>\n\n      <PostList posts={posts} />\n\n      {selectedPost && (\n        <PostForm\n          key={selectedPost?.id}\n          post={selectedPost}\n          onSubmit={updatePost}\n          onReset={() => setSelectedPost(null)}\n        />\n      )}\n    </div>\n  );\n};"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAKC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,SAASC,QAAQ,QAAQ,YAAY;;AAErC;;AAEA;AACA,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,YAAY,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMjD,OAAO,MAAMC,SAA0B,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdI,YAAY,CAACI,MAAM,CAAC,CACjBI,IAAI,CAACD,QAAQ,CAAC;EACnB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;;EAEnE;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA,oBACEK,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MAAIS,SAAS,EAAC,YAAY;MAAAC,QAAA,GAAC,OAAK,EAACR,MAAM,EAAC,QAAM;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnDd,OAAA,CAACH,QAAQ;MAACO,KAAK,EAAEA;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEzBP,YAAY,iBACXP,OAAA,CAACJ,QAAQ;MAEPmB,IAAI,EAAER,YAAa;MACnBS,QAAQ,EAAEC,UAAW;MACrBC,OAAO,EAAEA,CAAA,KAAMV,eAAe,CAAC,IAAI;IAAE,GAHhCD,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEY,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAItB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CApDWF,SAA0B;AAAAmB,EAAA,GAA1BnB,SAA0B;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}